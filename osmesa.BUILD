# Install unmangled OSMesa using script from: https://github.com/devernay/osmesa-install
# curl https://raw.githubusercontent.com/devernay/osmesa-install/master/osmesa-install.sh \
#   | sed -e 's/mangled=1/mangled=0/' osmesa-install.sh | LLVM_BUILD=1 bash

cc_library(
    name = "osmesa",
    hdrs = glob([
        "osmesa/include/**/*.h",
    ]),
    includes = [
        "osmesa/include",
    ],
    linkopts = [
        "-lOSMesa32",
        "-lGLU",

        "-lLLVMAnalysis",
        "-lLLVMAsmParser",
        "-lLLVMAsmPrinter",
        "-lLLVMBitReader",
        "-lLLVMBitWriter",
        "-lLLVMCodeGen",
        "-lLLVMCore",
        "-lLLVMCoroutines",
        "-lLLVMCoverage",
        "-lLLVMDebugInfoCodeView",
        "-lLLVMDebugInfoDWARF",
        "-lLLVMDebugInfoMSF",
        "-lLLVMDebugInfoPDB",
        "-lLLVMDemangle",
        "-lLLVMExecutionEngine",
        "-lLLVMGlobalISel",
        "-lLLVMIRReader",
        "-lLLVMInstCombine",
        "-lLLVMInstrumentation",
        "-lLLVMInterpreter",
        "-lLLVMLTO",
        "-lLLVMLibDriver",
        "-lLLVMLineEditor",
        "-lLLVMLinker",
        "-lLLVMMC",
        "-lLLVMMCDisassembler",
        "-lLLVMMCJIT",
        "-lLLVMMCParser",
        "-lLLVMMIRParser",
        "-lLLVMObjCARCOpts",
        "-lLLVMObject",
        "-lLLVMObjectYAML",
        "-lLLVMOption",
        "-lLLVMOrcJIT",
        "-lLLVMPasses",
        "-lLLVMProfileData",
        "-lLLVMRuntimeDyld",
        "-lLLVMScalarOpts",
        "-lLLVMSelectionDAG",
        "-lLLVMSupport",
        "-lLLVMSymbolize",
        "-lLLVMTableGen",
        "-lLLVMTarget",
        "-lLLVMTransformUtils",
        "-lLLVMVectorize",
        "-lLLVMX86AsmParser",
        "-lLLVMX86AsmPrinter",
        "-lLLVMX86CodeGen",
        "-lLLVMX86Desc",
        "-lLLVMX86Disassembler",
        "-lLLVMX86Info",
        "-lLLVMX86Utils",
        "-lLLVMXRay",
        "-lLLVMipo",

        "-L/opt/osmesa/lib",
        "-L/opt/llvm/lib",
    ],
    visibility = ["//visibility:public"],
)
